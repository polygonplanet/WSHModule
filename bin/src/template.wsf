<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<package>
<job id="WSHModuleEngine">
<?job error="true" debug="false"?>
<runtime/>
<script language="JScript" type="text/javascript" charset="utf-8"><![CDATA[
(function(global) {
global.WSHModule = { _fixed64bitSymbol: '{fixed64bit}' };

WSHModule._resolve_64bit_ScriptControl = function() {
  var argc = WSHModule._argc = WScript.Arguments.Count();
  var symbol = WSHModule._fixed64bitSymbol;

  if (argc !== 1) {
    return;
  }

  var filename = WScript.Arguments.Item(argc - 1);
  if (filename === symbol) {
    return;
  }

  var sh = new ActiveXObject('WScript.Shell');
  var sc;

  try {
    // Windows 64bit can't use ScriptControl in System32
    sc = new ActiveXObject('ScriptControl');
  } catch (e) {
    var wsh32 = WScript.FullName.replace(/([\\])System32\1/i, '/SysWOW64/');

    // Restart script from SysWOW64 directory
    sh.Run([
      '"' + wsh32,
      WScript.ScriptFullName,
      filename + '"'
    ].join('" "'), 4, false);

    WScript.Quit();
  }

  sh = sc = null;
};
WSHModule._resolve_64bit_ScriptControl();

WSHModule._builtinDefinition = function() {
  (function(global, exports, require) {
    [[CODE_POINT]]

  }).apply(this, function() {
    var exports = WSHModule.exports = {
      globals: {},
      fs: {
        readFileSync: function(filename, encoding) {
          var req = new ActiveXObject('Microsoft.XMLHTTP');
          req.open('GET', filename, false);
          req.send();
          var content = req.responseText;
          return req = null, content;
        }
      }
    };

    var require = function(request) {
      return exports[request];
    };

    return [global, exports, require];
  }());
};
WSHModule._builtinDefinition();
WSHModule.load();

}((function() { return this; }()) || this || {}));
]]></script>
</job>
</package>
